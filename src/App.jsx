import { useState } from 'react'
import './App.css'
import HeaderButton from './components/HeaderButton';
import Task from './components/Task';
import MyButton from './components/UI/button/MyButton';
import MyInput from './components/UI/input/MyInput';

function App() {
  const [posts, setPosts] = useState([
    { id: 1, text: 'Learn React', description: '–£—á–∏–º –æ—Å–Ω–æ–≤—ã React, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Ö—É–∫–∏ –∏ JSX.', completed: false},
    { id: 2, text: 'Build a Todo App', description: '–°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Todo —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª—è—Ç—å, —É–¥–∞–ª—è—Ç—å –∏ –æ—Ç–º–µ—á–∞—Ç—å –∑–∞–¥–∞—á–∏.', completed: true },
    { id: 3, text: 'Master JavaScript', description: '–ü—Ä–æ–∫–∞—á–∏–≤–∞–µ–º –∑–Ω–∞–Ω–∏–µ JS: —Ñ—É–Ω–∫—Ü–∏–∏, –º–∞—Å—Å–∏–≤—ã, –æ–±—ä–µ–∫—Ç—ã, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å.', completed: false },
    { id: 4, text: 'Explore CSS', description: '–†–∞–∑–±–∏—Ä–∞–µ–º—Å—è —Å Flexbox, Grid, –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ —Å—Ç–∏–ª—è–º–∏.', completed: true },
  ]);

  const [headerTitle] = useState([
    { id: 1, title: 'All' },
    { id: 2, title: 'Active' },
    { id: 3, title: 'Completed' },
    { id: 4, title: 'Clear Completed' },
  ]);

  const [activeFilter, setActiveFilter] = useState('All');

  function toggleTask(id) {
    setPosts(posts.map(post =>
      post.id === id ? { ...post, completed: !post.completed } : post
    ));
  }

  function deleteTask(id) {
    setPosts(posts.filter(post => post.id !== id));
  }

  function toggleOpen(id) {
    setPosts(posts.map(post =>
      post.id === id ? { ...post, opened: !post.opened } : post
    ));
  }

  function setFilter(filter) {
    if (filter === 'Clear Completed') {
      setPosts(posts.filter(post => !post.completed));
      setActiveFilter('All'); // —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–∞
    } else {
      setActiveFilter(filter);
    }
  }

  // üî• –≤—ã—á–∏—Å–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º
  const filteredPosts = posts.filter(post => {
    if (activeFilter === 'Active') return !post.completed;
    if (activeFilter === 'Completed') return post.completed;
    return true; // All
  });

  const addNewTask = () => {
    // –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
    const newTask = { id: Date.now(), text: 'New Task', description: 'Task description', completed: false };
    setPosts([...posts, newTask]);
  }

  return (
    <div className='App'>
      <div className='header'>
        {headerTitle.map((header) => (
          <HeaderButton
            key={header.id}
            title={header.title}
            onClick={() => setFilter(header.title)} // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫!
          />
        ))}
      </div>

      <div className='content'>
        {filteredPosts.map((post) => (
          <Task
            key={post.id}
            task={post}
            onToggle={toggleTask}
            onDelete={deleteTask}
            onOpen={toggleOpen}
          />
        ))}
      </div>
      <MyInput placeholder="New task" />
      <MyInput placeholder="description" />
      <MyButton onClick={addNewTask}>Create</MyButton>


    </div>
  );
}

export default App;
